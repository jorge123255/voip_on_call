[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
; Global variables

[soc-incoming]
; Context for incoming SOC alert calls
; This is where calls from your SOC system arrive

exten => s,1,NoOp(Incoming SOC Alert Call from ${CALLERID(num)})
 same => n,Answer()
 same => n,Set(CHANNEL(language)=en)
 same => n,Playback(silence/1)
 same => n,AGI(call_router.py)
 same => n,NoOp(Primary: ${ONCALL_NUMBER}, Escalation: ${ESCALATION_ENABLED}, Levels: ${ESCALATION_LEVELS})
 same => n,GotoIf($["${ONCALL_NUMBER}" = ""]?no-oncall)
 same => n,Set(CURRENT_LEVEL=1)
 same => n(try_level),NoOp(Trying Level ${CURRENT_LEVEL})
 same => n,Set(LEVEL_NUMBER=${ONCALL_LEVEL${CURRENT_LEVEL}})
 same => n,Set(LEVEL_TIMEOUT=${IF($["${ONCALL_TIMEOUT${CURRENT_LEVEL}}" != ""]?${ONCALL_TIMEOUT${CURRENT_LEVEL}}:30)})
 same => n,NoOp(Calling ${LEVEL_NUMBER} with ${LEVEL_TIMEOUT}s timeout)
 same => n,Dial(Local/${LEVEL_NUMBER}@outbound,${LEVEL_TIMEOUT},tTgA(beep))
 same => n,NoOp(Level ${CURRENT_LEVEL} result: ${DIALSTATUS})
 same => n,GotoIf($["${DIALSTATUS}" = "ANSWER"]?completed)
 same => n,GotoIf($["${ESCALATION_ENABLED}" != "1"]?failed)
 same => n,Set(CURRENT_LEVEL=$[${CURRENT_LEVEL} + 1])
 same => n,GotoIf($[${CURRENT_LEVEL} <= ${ESCALATION_LEVELS} + 1]?try_level)
 same => n,Goto(all_failed)
 same => n(completed),NoOp(Call answered at level ${CURRENT_LEVEL})
 same => n,Hangup()
 same => n(all_failed),NoOp(All escalation levels failed)
 same => n,Playback(tt-allbusy)
 same => n,Hangup()
 same => n(failed),NoOp(Call forwarding failed: ${DIALSTATUS})
 same => n,Playback(tt-weasels)
 same => n,Hangup()
 same => n(no-oncall),NoOp(No on-call number configured)
 same => n,Playback(ss-noservice)
 same => n,Hangup()

exten => _X.,1,NoOp(Incoming SOC Alert Call from ${CALLERID(num)})
 same => n,Answer()
 same => n,Set(CHANNEL(language)=en)
 same => n,Playback(silence/1)
 same => n,Playback(custom/soc-alert)  ; Optional: Play "SOC Alert" message
 same => n,AGI(call_router.py)         ; Execute AGI script to get on-call number
 same => n,NoOp(Forwarding to: ${ONCALL_NUMBER})
 same => n,GotoIf($["${ONCALL_NUMBER}" = ""]?no-oncall)
 same => n,Dial(Local/${ONCALL_NUMBER}@outbound,45,rtT)
 same => n,GotoIf($["${DIALSTATUS}" = "ANSWER"]?completed)
 same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy)
 same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?noanswer)
 same => n,Goto(failed)

exten => _X.,n(completed),NoOp(Call completed: ${DIALSTATUS})
 same => n,Hangup()

exten => _X.,n(busy),NoOp(On-call phone busy)
 same => n,Playback(custom/oncall-busy)
 same => n,Hangup()

exten => _X.,n(noanswer),NoOp(On-call did not answer)
 same => n,Playback(custom/oncall-noanswer)
 same => n,Hangup()

exten => _X.,n(failed),NoOp(Call forwarding failed: ${DIALSTATUS})
 same => n,Playback(custom/forward-failed)
 same => n,Hangup()

exten => _X.,n(no-oncall),NoOp(No on-call number configured)
 same => n,Playback(custom/no-oncall)
 same => n,Hangup()

[from-trunk]
; Context for incoming calls from VoIP.ms trunk
; Route all incoming DID calls to SOC incoming handler

exten => 3126206795,1,NoOp(Incoming call to DID)
 same => n,Goto(soc-incoming,s,1)

exten => 500142,1,NoOp(Incoming call from trunk)
 same => n,Goto(soc-incoming,s,1)

; Catch-all for any DID format
exten => _X.,1,NoOp(Incoming call to ${EXTEN})
 same => n,Goto(soc-incoming,s,1)

[outbound]
; Outbound calling context
; Routes calls to external numbers via SIP trunk

; US/Canada with +1 prefix (11 digits)
exten => _+1NXXNXXXXXX,1,NoOp(US/Canada call to ${EXTEN})
 same => n,Set(CLEAN_NUMBER=${EXTEN:1})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/${CLEAN_NUMBER}@voipms-trunk,45)
 same => n,Hangup()

; US/Canada 11-digit (with 1 prefix)
exten => _1NXXNXXXXXX,1,NoOp(Outbound US/Canada call to ${EXTEN})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/${EXTEN}@voipms-trunk,45)
 same => n,Hangup()

; US/Canada 10-digit (add 1 prefix)
exten => _NXXNXXXXXX,1,NoOp(Outbound US/Canada call to ${EXTEN})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/1${EXTEN}@voipms-trunk,45)
 same => n,Hangup()

; International with + prefix (convert to 011 and use international trunk)
exten => _+X.,1,NoOp(International call to ${EXTEN})
 same => n,Set(CLEAN_NUMBER=${EXTEN:1})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/011${CLEAN_NUMBER}@voipms-intl,45)
 same => n,Hangup()

; International with 011 prefix (use international trunk)
exten => _011X.,1,NoOp(International call to ${EXTEN})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/${EXTEN}@voipms-intl,45)
 same => n,Hangup()

; Ireland numbers (353 prefix)
exten => _353.,1,NoOp(Ireland call to ${EXTEN})
 same => n,Set(CALLERID(num)=3126206795)
 same => n,Dial(SIP/011${EXTEN}@voipms-trunk,45)
 same => n,Hangup()

; Local extension (3-digit)
exten => _XXX,1,NoOp(Local extension ${EXTEN})
 same => n,Dial(SIP/${EXTEN},45)
 same => n,Hangup()

[default]
; Default context for other calls
exten => _X.,1,NoOp(Unauthorized call from ${CALLERID(num)})
 same => n,Playback(ss-noservice)
 same => n,Hangup()

; Status check extension - dial 999 to test
exten => 999,1,NoOp(System status check)
 same => n,Answer()
 same => n,Playback(demo-thanks)
 same => n,Hangup()
